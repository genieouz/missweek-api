import { AnyObject } from '~/commons/typings/typescript';
import { ClientFilterInput } from '~/commons/graphql/types-and-inputs/client-filter.input';
import { ExecutionContext } from '@nestjs/common';
import { Response } from 'express';
export declare function applyClientFilterToArray(array: any[], opts: ClientFilterInput): any[];
export declare function mergeQueryFilters(inputFilter: AnyObject, plainQueryFilter?: AnyObject): AnyObject;
export declare function getArgsFromContext(context: ExecutionContext): AnyObject;
export declare function normalizeClientFilterForSearch(clientFilter?: ClientFilterInput): ClientFilterInput;
export declare function normalizeClientFilterForCount(clientFilter?: ClientFilterInput): ClientFilterInput;
export declare function isValidMongoId(str: string): boolean;
export declare function pushIfNotContains(arr: any[], val: any): any[];
export declare function getMajorityNumber(size: number): number;
export declare function popFirstPrimitive(array: any[], search: any): any[];
export declare function popFirst(array: any[], fn: (value: any) => boolean): any[];
export declare function getRequestFromContext(context: ExecutionContext): any;
export declare function setupDownloadHeaders(res: Response, filename?: string, mimeType?: string): Response;
